/// <reference types="react" />
import type { DocumentNode, FragmentDefinitionNode, ValidationRule } from 'graphql';
import { CopyQueryCallback, EditCallback, OnClickReference } from './hooks';
import { KeyMap } from './types';
export declare type UseQueryEditorArgs = {
    editorTheme?: string;
    externalFragments?: string | FragmentDefinitionNode[];
    onClickReference?: OnClickReference;
    onCopyQuery?: CopyQueryCallback;
    onEdit?(value: string, documentAST?: DocumentNode): void;
    onEditOperationName?: EditCallback;
    readOnly?: boolean;
    validationRules?: ValidationRule[];
    keyMap?: KeyMap;
};
export declare function useQueryEditor({ editorTheme, keyMap, externalFragments, onClickReference, onCopyQuery, onEdit, onEditOperationName, readOnly, validationRules, }?: UseQueryEditorArgs, caller?: Function): import("react").RefObject<HTMLDivElement>;
export declare const STORAGE_KEY_QUERY = "query";
