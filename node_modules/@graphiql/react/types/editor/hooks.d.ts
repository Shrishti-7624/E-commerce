import { GetDefaultFieldNamesFn } from '@graphiql/toolkit';
import type { EditorConfiguration } from 'codemirror';
import type { SchemaReference } from 'codemirror-graphql/utils/SchemaReference';
import { CodeMirrorEditor } from './types';
export declare function useSynchronizeValue(editor: CodeMirrorEditor | null, value: string | undefined): void;
export declare function useSynchronizeOption<K extends keyof EditorConfiguration>(editor: CodeMirrorEditor | null, option: K, value: EditorConfiguration[K]): void;
export declare type EditCallback = (value: string) => void;
export declare function useChangeHandler(editor: CodeMirrorEditor | null, callback: EditCallback | undefined, storageKey: string | null, tabProperty: 'variables' | 'headers', caller: Function): void;
export declare type OnClickReference = (reference: SchemaReference) => void;
export declare function useCompletion(editor: CodeMirrorEditor | null, callback: OnClickReference | null, caller: Function): void;
declare type EmptyCallback = () => void;
export declare function useKeyMap(editor: CodeMirrorEditor | null, keys: string[], callback: EmptyCallback | undefined): void;
export declare type CopyQueryCallback = (query: string) => void;
export declare function useCopyQuery({ caller, onCopyQuery, }?: {
    caller?: Function;
    onCopyQuery?: CopyQueryCallback;
}): () => void;
export declare function useMergeQuery({ caller }?: {
    caller?: Function;
}): () => void;
export declare function usePrettifyEditors({ caller, }?: {
    caller?: Function;
}): () => void;
export declare function useAutoCompleteLeafs({ getDefaultFieldNames, caller, }?: {
    getDefaultFieldNames?: GetDefaultFieldNamesFn;
    caller?: Function;
}): () => string | undefined;
export {};
