{"ast":null,"code":"// import { validEmail, validPassword } from './regex.js';\nimport * as zxcvbn from \"zxcvbn\";\nexport function minMaxLength(text, minLength, maxLength) {\n  let result = !text || text.length < minLength;\n  if (maxLength) result = result || text.length < minLength;\n  return result;\n}\nexport function validEmail(text) {\n  const regex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n  return !regex.test(text);\n}\nlet registeredUsers = [\"ravi@kiran.com\", \"mail@myblog.in\", \"contact@lucky.com\"];\nexport function userExists(email) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      if (registeredUsers.findIndex(u => u === email) !== -1) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    });\n  });\n}\nexport function passwordStrength(text) {\n  let result = zxcvbn(text);\n  return result.score < 3;\n}","map":{"version":3,"names":["zxcvbn","minMaxLength","text","minLength","maxLength","result","length","validEmail","regex","RegExp","test","registeredUsers","userExists","email","Promise","resolve","setTimeout","findIndex","u","passwordStrength","score"],"sources":["C:/Users/Shrishti.s/Desktop/final_ecommerce_rtdb/src/Component/SignUp/SIgnup_validation.js"],"sourcesContent":["// import { validEmail, validPassword } from './regex.js';\r\nimport * as zxcvbn from \"zxcvbn\";\r\nexport function minMaxLength(text, minLength, maxLength) {\r\n  let result = !text || text.length < minLength;\r\n  if (maxLength) result = result || text.length < minLength;\r\n  return result;\r\n}\r\n\r\nexport function validEmail(text) {\r\n  const regex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n  );\r\n\r\n  return !regex.test(text);\r\n}\r\n\r\nlet registeredUsers = [\"ravi@kiran.com\", \"mail@myblog.in\", \"contact@lucky.com\"];\r\n\r\nexport function userExists(email) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      if (registeredUsers.findIndex((u) => u === email) !== -1) {\r\n        resolve(true);\r\n      } else {\r\n        resolve(false);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport function passwordStrength(text) {\r\n  let result = zxcvbn(text);\r\n  return result.score < 3;\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,SAA5B,EAAuCC,SAAvC,EAAkD;EACvD,IAAIC,MAAM,GAAG,CAACH,IAAD,IAASA,IAAI,CAACI,MAAL,GAAcH,SAApC;EACA,IAAIC,SAAJ,EAAeC,MAAM,GAAGA,MAAM,IAAIH,IAAI,CAACI,MAAL,GAAcH,SAAjC;EACf,OAAOE,MAAP;AACD;AAED,OAAO,SAASE,UAAT,CAAoBL,IAApB,EAA0B;EAC/B,MAAMM,KAAK,GAAGC,MAAM,CAClB,sEADkB,CAApB;EAIA,OAAO,CAACD,KAAK,CAACE,IAAN,CAAWR,IAAX,CAAR;AACD;AAED,IAAIS,eAAe,GAAG,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,mBAArC,CAAtB;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAChC,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;IAC9BC,UAAU,CAAC,MAAM;MACf,IAAIL,eAAe,CAACM,SAAhB,CAA2BC,CAAD,IAAOA,CAAC,KAAKL,KAAvC,MAAkD,CAAC,CAAvD,EAA0D;QACxDE,OAAO,CAAC,IAAD,CAAP;MACD,CAFD,MAEO;QACLA,OAAO,CAAC,KAAD,CAAP;MACD;IACF,CANS,CAAV;EAOD,CARM,CAAP;AASD;AAED,OAAO,SAASI,gBAAT,CAA0BjB,IAA1B,EAAgC;EACrC,IAAIG,MAAM,GAAGL,MAAM,CAACE,IAAD,CAAnB;EACA,OAAOG,MAAM,CAACe,KAAP,GAAe,CAAtB;AACD"},"metadata":{},"sourceType":"module"}